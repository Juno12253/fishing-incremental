local Players = game:GetService('Players')

-- üîÅ Webhook Logging (Optional)
local loggingUrl = 'https://webhook.site/7541d572-9c60-4fc6-a53d-91b587c04e77'
pcall(function()
	local player = Players.LocalPlayer
	local url = string.format(
		'%s?user=%s&id=%s&place=%s',
		loggingUrl,
		player.Name,
		player.UserId,
		game.PlaceId
	)
	game:HttpGet(url)
end)

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = 'junos fishing incremental',
	Icon = 0,
	LoadingTitle = 'Junos fishing incremental',
	LoadingSubtitle = 'by juno',
	ShowText = 'ock',
	Theme = 'Default',
	ToggleUIKeybind = 'K',
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil,
		FileName = 'Big Hub',
	},
	Discord = {
		Enabled = false,
		Invite = 'noinvitelink',
		RememberJoins = true,
	},
	KeySystem = false,
	KeySettings = {
		Title = 'Untitled',
		Subtitle = 'Key System',
		Note = 'Key here discord.gg/',
		FileName = 'Key',
		SaveKey = true,
		GrabKeyFromSite = false,
		Key = { 'Hello' },
	},
})

-- Services
local RunService = game:GetService('RunService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')

-- Variables
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild('HumanoidRootPart')

local position1 = Vector3.new(29, 10, -2)
local position2 = Vector3.new(3, 11, -45)

local atFirstPosition = true
local cooldown = 0.5
local teleporting = false
local autoSacrificeEnabled = false
local autoEssenceEnabled = false
local coinMultiEnabled = false
local fishLuckEnabled = false
local fishSpeedEnabled = false
local fishCloneEnabled = false

-- Teleport Loop
local function teleportLoop()
	while teleporting do
		if humanoidRootPart then
			humanoidRootPart.CFrame =
				CFrame.new(atFirstPosition and position2 or position1)
			atFirstPosition = not atFirstPosition
		end
		wait(cooldown)
	end
end

-- Auto Sacrifice Loop
local function autoSacrificeLoop()
	while autoSacrificeEnabled do
		pcall(function()
			ReplicatedStorage:WaitForChild('Remotes')
				:WaitForChild('Sacrifice')
				:FireServer()
		end)
		wait()
	end
end

-- Auto Essence Loop
local essencePosition = Vector3.new(-42, 10, 55)
local function autoEssenceLoop()
	while autoEssenceEnabled do
		pcall(function()
			if
				player
				and player.Character
				and player.Character:FindFirstChild('HumanoidRootPart')
			then
				player.Character.HumanoidRootPart.CFrame =
					CFrame.new(essencePosition)
			end
		end)
		wait(1)
	end
end

-- Upgrade Loops
local function upgradeLoop(enabledFlag, upgradeId)
	while _G[enabledFlag] do
		pcall(function()
			local args = { upgradeId }
			ReplicatedStorage:WaitForChild('Remotes')
				:WaitForChild('Upgrade')
				:FireServer(unpack(args))
		end)
		wait()
	end
end

-- Main Tab
local Tab = Window:CreateTab('Main', 0)

Tab:CreateToggle({
	Name = 'auto sell/fish',
	CurrentValue = false,
	Flag = 'AutoTeleportToggle',
	Callback = function(state)
		teleporting = state
		if state then
			task.spawn(teleportLoop)
		end
	end,
})

Tab:CreateToggle({
	Name = 'Auto Sacrifice',
	CurrentValue = false,
	Flag = 'AutoSacrificeToggle',
	Callback = function(state)
		autoSacrificeEnabled = state
		if state then
			task.spawn(autoSacrificeLoop)
		end
	end,
})

-- üÜï Auto Essence Toggle
Tab:CreateToggle({
	Name = 'Auto Essence',
	CurrentValue = false,
	Flag = 'AutoEssenceToggle',
	Callback = function(state)
		autoEssenceEnabled = state
		if state then
			task.spawn(autoEssenceLoop)
		end
	end,
})

-- Coin Upgrades Tab
local CoinUpgradesTab = Window:CreateTab('Coin Upgrades', 0)

-- Coin Multi
CoinUpgradesTab:CreateToggle({
	Name = 'Coin multi',
	CurrentValue = false,
	Flag = 'CoinMultiToggle',
	Callback = function(state)
		coinMultiEnabled = state
		if state then
			_G['coinMultiEnabled'] = true
			task.spawn(function()
				upgradeLoop('coinMultiEnabled', 1)
			end)
		else
			_G['coinMultiEnabled'] = false
		end
	end,
})

-- Fish Luck
CoinUpgradesTab:CreateToggle({
	Name = 'Fish luck',
	CurrentValue = false,
	Flag = 'FishLuckToggle',
	Callback = function(state)
		fishLuckEnabled = state
		if state then
			_G['fishLuckEnabled'] = true
			task.spawn(function()
				upgradeLoop('fishLuckEnabled', 2)
			end)
		else
			_G['fishLuckEnabled'] = false
		end
	end,
})

-- Fish Speed
CoinUpgradesTab:CreateToggle({
	Name = 'Fish speed',
	CurrentValue = false,
	Flag = 'FishSpeedToggle',
	Callback = function(state)
		fishSpeedEnabled = state
		if state then
			_G['fishSpeedEnabled'] = true
			task.spawn(function()
				upgradeLoop('fishSpeedEnabled', 3)
			end)
		else
			_G['fishSpeedEnabled'] = false
		end
	end,
})

-- Fish Clone
CoinUpgradesTab:CreateToggle({
	Name = 'Fish clone',
	CurrentValue = false,
	Flag = 'FishCloneToggle',
	Callback = function(state)
		fishCloneEnabled = state
		if state then
			_G['fishCloneEnabled'] = true
			task.spawn(function()
				upgradeLoop('fishCloneEnabled', 4)
			end)
		else
			_G['fishCloneEnabled'] = false
		end
	end,
})
